name: Python App on Azure Kubernetes Service

on:
    workflow_dispatch:
    push:
        branches: [ main ]
        paths-ignore: 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
    terraform_infrastructure:
        runs-on: ubuntu-latest
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            - name: Azure Login
              uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: Parse Azure Credentials
              id: parse_creds
              run: |
                echo "client_id=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientId)" >> $GITHUB_ENV
                echo "client_secret=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientSecret)" >> $GITHUB_ENV
                echo "tenant_id=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .tenantId)" >> $GITHUB_ENV
                echo "subscription_id=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .subscriptionId)" >> $GITHUB_ENV
            - name: Setup terraform
              uses: hashicorp/setup-terraform@v3
            - name: Terraform Init & Plan
              run: |
                terraform init -backend-config="client_id=${{ env.client_id }}" \
                               -backend-config="client_secret=${{ env.client_secret }}" \
                               -backend-config="tenant_id=${{ env.tenant_id }}" \
                               -backend-config="subscription_id=${{ env.subscription_id }}"
                terraform plan -out infraplan
              working-directory: tercluster/
            - name: Teraform Apply
              run: terraform apply infraplan
              working-directory: tercluster/
    docker_stage:
      runs-on: ubuntu-latest
      steps:
            - name: Repo Checkout
              uses: actions/checkout@v4
            - name: Login to Azure
              uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: Build and Push
              uses: docker/build-push-action@v6
              with:
                context: ./msdocs-python-django-webapp-quickstart 
                push: true
                tags: rigaacr.azurecr.io/flaskapp:latest